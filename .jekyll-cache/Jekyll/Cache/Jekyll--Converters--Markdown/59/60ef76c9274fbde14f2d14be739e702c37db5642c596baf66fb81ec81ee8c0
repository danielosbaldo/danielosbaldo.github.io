I"4<p>Que tal! en el presente tutorial veremos como crear un  *Api**[^Apis].  Con ROR, utilizaremos la version 5 de el framework en el siguiente tutorial veremos como conectar REACT con esta API.</p>

<p>Antes de continuar es importante que se tenga conocimiento de lo que son las API y SOA Service Oriented Architecture</p>

<h3 id="primero-que-es-un-api">Primero :¿Que es un API?</h3>
<p>un API por sus siglas en ingles Aplicación Programming Interface</p>

<h3 id="soa-arquitectura-basada-en-servicios">SOA: Arquitectura basada en servicios</h3>
<p><a href="http://www.epicor.com/lac/solutions/soa.aspx">SOA</a> es una método de diseño de arquitectura de software</p>

<p><a href="http://www.ticbeat.com/tecnologias/que-es-una-api-para-que-sirve/">Las API’S</a> La interfaz de programación de aplicaciones, abreviada como API del inglés: Application Programming Interface, es un conjunto de subrutinas, funciones y procedimientos (o métodos, en la programación orientada a objetos) que ofrece cierta biblioteca para ser utilizado por otro software como una capa de abstracción.</p>

<h2 id="comencemos">Comencemos:</h2>
<p>Para iniciar lo primero que tenemos que hacer es asegurarnos de que todo este instalado y listo esto no es para principiantes en el ambiente rails si es su caso primero visiten instalación aquí enlaces para cada plataforma:</p>

<p>###WINDOWS:
hay 2 rutas la mas fácil y rápida es con <a href="http://railsinstaller.org/en">RailsInstaller</a> Pero en lo personal no me agrada.
La segunda es <a href="https://www.vagrantup.com/">Vagrant</a> el cual te permite manejar maquinas virtuales de manera rápida y sencilla a parte de combinarlo con <a href="https://www.chef.io/chef/">Chef</a> para la preinstalación de todos los componentes. Vagrant es increíble permite tener todas las bondades de Linux en windows y con un consumo mínimo de recursos Definitivamente lo recomiendo para los que deseen utilizar windows.
otra opción para los usuarios de Windows 10 es el uso de WSL ó WLS2. en otro post explicare mas a detalle este Feature <a href="https://danielvalenzuela.website/">WSL</a>.</p>

<h3 id="linux">Linux:</h3>
<p>Recomiendo seguir esta Guía por <a href="https://gorails.com/setup/ubuntu/16.04">Go Rails</a>
explica excelente el proceso OJO hay que leer a detalle</p>
<h2 id="a-lo-que-truje-chencha">A lo que truje chencha</h2>
<p>para iniciar la aplicación en modo API es necesario correr el siguiente comando</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rails new api_app_name <span class="nt">--api</span>
</code></pre></div></div>
<p>nos movemos al directorio que creamos</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">cd </span>nombre_del_api
 bundle <span class="nb">install
 </span>bin/rake db:setup
</code></pre></div></div>
<p>#Ahora a hablar de configuramos
CORS Cross-Origin Http Request es un estándar que permite realizar request desde varios orígenes http para leer mas del tema aquí un enlace de Mozilla <a href="https://developer.mozilla.org/es/docs/Web/HTTP/Access_control_CORS">CORS</a></p>

<p>en esta ocasión veremos CORS en rails y se relazara por la gema rack-cors para usarla hay que habilitarla en el Gemfile</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Use Rack CORS for handling Cross-Origin Resource Sharing (CORS), making cross-origin AJAX possible</span>
<span class="n">gem</span> <span class="s1">'rack-cors'</span>

</code></pre></div></div>
<p>ahora ingresamos Bundle install</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">install</span>
</code></pre></div></div>

<p>ahora nos moveremos a el archivo de configuración <code class="language-plaintext highlighter-rouge">config/initializers/cors.rb</code> una vez dentro verán todo comentado este archivo hay que editarlo pueden usar las configuraciones que están en <a href="https://github.com/cyu/rack-cors/">RackCors Github</a></p>

<p>la mía se ve de la siguiente manera</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">config</span><span class="p">.</span><span class="nf">middleware</span><span class="p">.</span><span class="nf">insert_before</span> <span class="mi">0</span><span class="p">,</span> <span class="no">Rack</span><span class="o">::</span><span class="no">Cors</span> <span class="k">do</span>
  <span class="n">allow</span> <span class="k">do</span>
    <span class="n">origins</span> <span class="s1">'example.com'</span>

    <span class="n">resource</span> <span class="s1">'*'</span><span class="p">,</span>
      <span class="ss">headers: :any</span><span class="p">,</span>
      <span class="ss">methods: </span><span class="p">[</span><span class="ss">:get</span><span class="p">,</span> <span class="ss">:post</span><span class="p">,</span> <span class="ss">:put</span><span class="p">,</span> <span class="ss">:patch</span><span class="p">,</span> <span class="ss">:delete</span><span class="p">,</span> <span class="ss">:options</span><span class="p">,</span> <span class="ss">:head</span><span class="p">]</span>
  <span class="k">end</span>
<span class="k">end</span>

</code></pre></div></div>

<p>nota CORS Es recomendado por la <a href="https://www.w3.org/">W3C</a></p>

<p>#Serializacion
utilizaremos una gema para serializar active_model_serializers
para mas información blog <a href="https://www.sitepoint.com/active-model-serializers-rails-and-json-oh-my/">serializer</a>
agregamos al Gemfile</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">gem</span> <span class="s1">'active_model_serializers'</span><span class="p">,</span> <span class="s1">'~&gt; 0.10.0'</span>
</code></pre></div></div>
<p>y corremos bundle</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
bundle <span class="nb">install</span>

</code></pre></div></div>
<p>creamos el archivo <code class="language-plaintext highlighter-rouge">config/initializers/active_model_serializers.rb</code> y escribimos lo siguiente</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveModel</span><span class="o">::</span><span class="no">Serializer</span><span class="p">.</span><span class="nf">config</span><span class="p">.</span><span class="nf">adapter</span> <span class="o">=</span> <span class="ss">:json_api</span>
</code></pre></div></div>

<p>#Versionar
Veremos Como versionar las api en ruby se pueden usar gemas pero en este caso les dire como hacerlo desde cero.</p>

<p>Despues configuramos RSPEC para el Testeo con:
<a href="http://rspec.info/">Rspec</a>
en nuestro gem file en la sección de desarrollo y testeo se agrega rspec-rails</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">group</span> <span class="ss">:development</span><span class="p">,</span> <span class="ss">:test</span> <span class="k">do</span>

  <span class="c1"># Use RSpec for specs</span>
  <span class="n">gem</span> <span class="s1">'rspec-rails'</span><span class="p">,</span> <span class="s1">'&gt;= 3.5.0'</span>

  <span class="c1"># Use Factory Girl for generating random test data</span>
  <span class="n">gem</span> <span class="s1">'factory_girl_rails'</span>
<span class="k">end</span>

</code></pre></div></div>

<p>actualizamos bundle</p>

<p>y correemos el instalador</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rails g rspec:install

</code></pre></div></div>
:ET